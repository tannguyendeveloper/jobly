{"version":3,"sources":["api/JoblyAPI.js","components/App/pages/CompaniesPage/CompaniesList/CompanyListing.js","components/App/pages/CompaniesPage/CompaniesList/index.js","components/App/pages/CompaniesPage/CompaniesList/CompaniesList.js","components/App/pages/CompaniesPage/CompaniesPage.js","components/App/pages/CompaniesPage/index.js","contexts/AppContext.js","components/App/common/JobListings/JobListing.js","components/App/common/JobListings/index.js","components/App/common/JobListings/JobListings.js","components/App/pages/CompanyPage/index.js","components/App/pages/CompanyPage/CompanyPage.js","form-schemas/LoginFormSchema.js","components/App/LoginForm/LoginForm.js","components/App/LoginForm/index.js","components/App/pages/HomePage/index.js","components/App/pages/HomePage/HomePage.js","components/App/pages/JobsPage/JobsPage.js","components/App/pages/JobsPage/index.js","components/App/pages/LoginPage/index.js","components/App/pages/LoginPage/LoginPage.js","form-schemas/ProfileFormSchema.js","components/App/pages/EditProfilePage/ProfileForm/ProfileForm.js","components/App/pages/EditProfilePage/ProfileForm/index.js","components/App/pages/EditProfilePage/index.js","components/App/pages/EditProfilePage/EditProfilePage.js","form-schemas/SignUpFormSchema.js","components/App/SignUpForm/SignUpForm.js","components/App/SignUpForm/index.js","components/App/pages/SignUpPage/index.js","components/App/pages/SignUpPage/SignUpPage.js","hooks/useLocalStorage.js","components/App/Nav/GuestNav/index.js","components/App/Nav/GuestNav/GuestNav.js","components/App/Nav/UserNav/index.js","components/App/Nav/UserNav/UserNav.js","components/App/Nav/index.js","components/App/Nav/Nav.js","components/App/PrivateRoute/index.js","components/App/PrivateRoute/PrivateRoute.js","components/App/App.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","name","queryString","log","this","request","res","companies","handle","company","titleQuery","jobs","username","user","isAdmin","jobid","CompanyListing","className","to","logoUrl","src","alt","description","CompaniesList","map","idx","Search","Input","CompaniesPage","useState","setCompanies","useEffect","search","query","a","JoblyAPI","getCompanies","placeholder","onSearch","style","width","length","AppContext","createContext","JobListing","job","useContext","applyToJob","dispatch","applications","alreadyApplied","includes","id","loading","handleClick","useCallback","appliedJobId","type","jobId","title","salary","companyName","Number","equity","disabled","onClick","JobListings","jobListItems","CompanyPage","useParams","setCompany","setLoading","loadCompany","getCompany","spinning","LoginFormSchema","yup","shape","required","password","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginForm","AppState","initialValues","onSubmit","login","validationSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Item","label","Password","HomePage","isLoggedIn","JobsPage","setJobs","getJobs","LoginPage","SignUpFormSchema","max","min","firstName","lastName","email","ProfileForm","updateUser","ProfileFormSchema","EditProfilePage","SignUpForm","signup","setSubmitting","SignUpPage","useLocalStorage","key","localStorage","value","setValue","set","setItem","remove","removeItem","GuestNav","UserNav","logout","Nav","PrivateRoute","children","props","initialUserState","isLoading","userReducer","state","action","newState","push","updatedUser","Error","App","history","useHistory","useReducer","registerUser","resetForm","success","applied","loadUser","getUser","decode","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f85f7355.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n\r\n/** API Class.\r\n *\r\n * Static class tying together methods used to get/send to to the API.\r\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\r\n * be any API-aware stuff elsewhere in the frontend.\r\n *\r\n */\r\n\r\nclass JoblyApi {\r\n  static token;\r\n\r\n  static async request(endpoint, data = {}, method = \"get\") {\r\n    console.debug(\"API Call:\", endpoint, data, method);\r\n\r\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\r\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\r\n    const url = `${BASE_URL}/${endpoint}`;\r\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\r\n    const params = (method === \"get\")\r\n        ? data\r\n        : {};\r\n\r\n    try {\r\n      return (await axios({ url, method, data, params, headers })).data;\r\n    } catch (err) {\r\n      console.error(\"API Error:\", err.response);\r\n      let message = err.response.data.error.message;\r\n      throw Array.isArray(message) ? message : [message];\r\n    }\r\n  }\r\n\r\n  // Individual API routes\r\n\r\n  static async getCompanies(name) {\r\n    const queryString = name ? `?name=${name}` : '';\r\n    console.log(queryString);\r\n    let res = await this.request(`companies/${queryString}`);\r\n    console.log(res.companies);\r\n    return res.companies;\r\n  }\r\n\r\n  static async getCompany(handle) {\r\n    let res = await this.request(`companies/${handle}`);\r\n    return res.company;\r\n  }\r\n\r\n  //** Post new company */\r\n  static async postCompany(data) {\r\n    let res = await this.request(`companies/`,data,\"post\");\r\n    return res.company;\r\n  }\r\n\r\n  /** Update Company */\r\n  static async updateCompany(data) {\r\n    let res = await this.request(`companies/${data.handle}`, data,\"patch\");\r\n    return res.company;\r\n  }\r\n\r\n  /** Update Company */\r\n  static async deleteCompany(handle) {\r\n    let res = await this.request(`companies/${handle}`, {}, \"delete\");\r\n    return res.company;\r\n  }\r\n\r\n\r\n  // Jobs\r\n  static async getJobs(titleQuery) {\r\n    const queryString = titleQuery ? `?title=${titleQuery}` : '';\r\n    console.log(queryString);\r\n    let res = await this.request(`jobs/${queryString}`);\r\n\r\n    console.log(res.jobs);\r\n    return res.jobs;\r\n  }\r\n\r\n  // Auth/Registration\r\n  static async login(data) {\r\n    try {\r\n      let response = await this.request(`auth/token`, data, \"post\");\r\n      return response;\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  static async registerUser(data) {\r\n    try {\r\n      let response = await this.request(`auth/register`, data, \"post\");\r\n      return response;\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  // Users\r\n\r\n  static async getUser(username) {\r\n    try {\r\n      let {user} = await this.request(`users/${username}`, {}, \"get\");\r\n      return user;\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw (e)\r\n    }\r\n  }\r\n\r\n  static async updateUser({username, ...data}) {\r\n    try {\r\n      delete(data.isAdmin);\r\n      let {user} = await this.request(`users/${username}`, data, \"patch\");\r\n      return user;\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw (e)\r\n    }\r\n  }\r\n\r\n  static async applyToJob(username, jobid) {\r\n    try {\r\n      let response = await this.request(`users/${username}/jobs/${jobid}`, {}, \"post\");\r\n      return response;\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw (e)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// // for now, put token (\"testuser\" / \"password\" on class)\r\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\r\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\r\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\r\n\r\nexport default JoblyApi;","import {Link} from 'react-router-dom';\r\nconst CompanyListing = ({company}) => {\r\n  return(\r\n    <li className=\"border border-gray-200 p-3 mb-2\">\r\n      <Link to={`/companies/${company.handle}`}>\r\n      {company.logoUrl}\r\n      { company.logoUrl ? <img src={`${company.logoUrl}`} alt=\"\"/> : null }\r\n      <strong>{company.name}</strong>\r\n      <p>{company.description}</p>\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CompanyListing;","import CompaniesList from './CompaniesList';\r\n\r\nexport default CompaniesList;","import CompanyListing from './CompanyListing';\r\n\r\nconst CompaniesList = ({companies,...props}) => {\r\n  return <ul>\r\n  {\r\n    companies.map((company, idx)=>{ console.log(company); return <CompanyListing key={`company-${idx}`} company={company}/>})\r\n  }\r\n  </ul>\r\n}\r\n\r\nexport default CompaniesList;","import { useEffect, useState } from \"react\";\r\nimport JoblyAPI from \"../../../../api/JoblyAPI\";\r\nimport CompaniesList from \"./CompaniesList\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nconst CompaniesPage = () => {\r\n  const [companies, setCompanies] = useState([]);\r\n  useEffect(function loadCompanies() {\r\n    search();\r\n  }, []);\r\n  const search = async (query) => {\r\n    const companies = await JoblyAPI.getCompanies(query);\r\n    setCompanies(companies);\r\n  };\r\n  return (\r\n    <div className=\"max-w-screen-lg mx-auto\">\r\n      <h1 className=\"block text-xl text-center m-3\">Companies</h1>\r\n      <Search\r\n        placeholder=\"input search text\"\r\n        onSearch={search}\r\n        style={{ width: 200 }}\r\n        className=\"my-3\"\r\n      />\r\n      {companies.length ? <CompaniesList companies={companies} /> : <></>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompaniesPage;\r\n","import CompaniesPage from './CompaniesPage';\r\n\r\nexport default CompaniesPage;","import {createContext} from \"react\";\r\nconst AppContext =  createContext();\r\nexport default AppContext;","import { useState, useContext, useCallback, useMemo } from \"react\";\r\nimport JoblyAPI from \"../../../../api/JoblyAPI\";\r\n\r\nimport { Button } from \"antd\";\r\nimport AppContext from \"../../../../contexts/AppContext\";\r\n\r\nconst JobListing = ({ job }) => {\r\n  const {applyToJob, dispatch, token, user} = useContext(AppContext);\r\n  const {applications, username} = user?.user;\r\n  const alreadyApplied = applications?.includes(job.id);\r\n  const [loading, setLoading] = useState(false);\r\n  const handleClick = useCallback(async () => {\r\n    try {\r\n      console.log(job.id);\r\n      let appliedJobId = await applyToJob(username, job.id);\r\n      console.log(appliedJobId);\r\n      dispatch({type:\"APPLY_TO_JOB\", jobId: appliedJobId});\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw e;\r\n    }\r\n  }, [applyToJob, dispatch, job.id, username]);\r\n  return (\r\n    <li className=\"border border-gray-200 p-3 mb-2 clear-both\">\r\n      <strong>{job?.title}</strong>\r\n      { job?.salary ? <p>Salary: ${job?.salary}</p> : '' }\r\n      { job.companyName ?? <p><strong>{job.companyName}</strong></p> }\r\n      {Number(job?.equity) > 0 ? <p>Equity: {job?.equity}</p> : null}\r\n      <Button className=\"float-right\" loading={loading} disabled={alreadyApplied} onClick={handleClick}>\r\n        {\r\n          alreadyApplied ? 'Applied' : 'Apply'\r\n        }\r\n      </Button>\r\n      <div className=\"clear-both\"></div>\r\n    </li>\r\n  );\r\n};\r\nexport default JobListing;\r\n","import JobListings from './JobListings';\r\nexport default JobListings;","import JobListing from './JobListing';\r\n\r\nconst JobListings = ({jobs = []}) => {\r\n  const jobListItems = jobs.map(job=><JobListing key={`job-${job.id}`}job={job}/>)\r\n  return(\r\n    jobs?.length ? <ul>{jobListItems}</ul> : null\r\n  )\r\n}\r\n\r\nexport default JobListings;","import CompanyPage from './CompanyPage';\r\n\r\nexport default CompanyPage;","import {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport JoblyAPI from \"../../../../api/JoblyAPI\";\r\nimport {Spin, message} from \"antd\";\r\nimport JobListings from \"../../common/JobListings/\";\r\n\r\nconst CompanyPage = () => {\r\n  const {handle} = useParams();\r\n  const [company, setCompany] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadCompany = async (handle) => {\r\n    setLoading(true);\r\n    try {\r\n      const company = await JoblyAPI.getCompany(handle);\r\n      setCompany(company);\r\n      setLoading(false);\r\n    } catch(e) {\r\n      console.error(e);\r\n      message.error('Unable to load company');\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadCompany(handle);\r\n  },[handle])\r\n\r\n  return(<>\r\n    <Spin spinning={loading}>\r\n    <div className=\"max-w-screen-lg mx-auto\">\r\n      <h1 className=\"text-xl text-center m-3\">{company?.name}</h1>\r\n      <p>{company?.description}</p>\r\n      <JobListings jobs={company?.jobs}/>\r\n    </div>\r\n    </Spin>\r\n  </>)\r\n}\r\n\r\nexport default CompanyPage;","import * as yup from 'yup';\r\n\r\nconst LoginFormSchema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  password: yup.string().required()\r\n})\r\n\r\nexport default LoginFormSchema;","import { useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport AppContext from \"../../../contexts/AppContext\";\r\n\r\nimport { Button } from \"antd\";\r\nimport { Form, Input } from \"formik-antd\";\r\n\r\nimport LoginFormSchema from \"../../../form-schemas/LoginFormSchema\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const AppState = useContext(AppContext);\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: \"\", password: \"\" }}\r\n      onSubmit={AppState.login}\r\n      validationSchema={LoginFormSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <Form {...layout} name=\"basic\">\r\n          <Form.Item label=\"Username\" name=\"username\">\r\n            <Input id=\"Username\" name=\"username\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input.Password id=\"Password\" name=\"password\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout} name=\"hello\">\r\n            <Button type=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from \"./LoginForm\";\r\nexport default LoginForm;","import HomePage from './HomePage';\r\n\r\nexport default HomePage;","import { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AppContext from \"../../../../contexts/AppContext\";\r\nimport LoginForm from \"../../LoginForm\";\r\n\r\nconst HomePage = () => {\r\n  const AppState = useContext(AppContext);\r\n  const { user } = AppState.user;\r\n  return (\r\n    <div className=\"max-w-screen-lg mx-auto\">\r\n      <h1 className=\"text-xl text-center m-3\">Jobly</h1>\r\n      {!AppState.user?.isLoggedIn ? (\r\n        <LoginForm />\r\n      ) : (\r\n        <>\r\n          <h2>Welcome {user.username}!</h2>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { useEffect, useState } from \"react\";\r\nimport JoblyAPI from \"../../../../api/JoblyAPI\";\r\nimport JobListings from \"../../common/JobListings/\";\r\n\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nconst JobsPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  useEffect(function loadCompanies() {\r\n    search();\r\n  }, []);\r\n  const search = async (query) => {\r\n    const jobs = await JoblyAPI.getJobs(query);\r\n    setJobs(jobs);\r\n  };\r\n  return (\r\n    <div className=\"max-w-screen-lg mx-auto\">\r\n      <h1 className=\"block text-xl text-center m-3\">CompaniesJobs</h1>\r\n      <Search\r\n        placeholder=\"input search text\"\r\n        onSearch={search}\r\n        style={{ width: 200 }}\r\n        className=\"my-3\"\r\n      />\r\n      <JobListings jobs={jobs} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;\r\n","import JobsPage from './JobsPage';\r\n\r\nexport default JobsPage;","import LoginPage from './LoginPage';\r\n\r\nexport default LoginPage;","import { useContext } from 'react';\r\nimport AppContext from '../../../../contexts/AppContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginForm from \"../../LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n  const AppState = useContext(AppContext);\r\n  console.log(AppState);\r\n  return !AppState?.user?.isLoggedIn ? <LoginForm /> : <Redirect to=\"/\" />\r\n}\r\n\r\nexport default LoginPage;","import * as yup from 'yup';\r\n\r\nconst SignUpFormSchema = yup.object().shape({\r\n  username: yup.string().max(25).required(),\r\n  password: yup.string().min(5).required(),\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().email().required()\r\n})\r\n\r\nexport default SignUpFormSchema;","import { useCallback, useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport AppContext from \"../../../../../contexts/AppContext\";\r\nimport ProfileFormSchema from \"../../../../../form-schemas/ProfileFormSchema\";\r\n\r\nimport { Button, Spin, message } from \"antd\";\r\nimport { Form, Input } from \"formik-antd\";\r\n\r\nimport JoblyAPI from \"../../../../../api/JoblyAPI\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst ProfileForm = () => {\r\n  const AppState = useContext(AppContext);\r\n  console.log(AppState);\r\n  const initialValues = AppState.user.user;\r\n  delete(initialValues.applications);\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={AppState.updateUser}\r\n      validationSchema={ProfileFormSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <Spin spinning={isSubmitting}>\r\n        <Form {...layout} name=\"basic\">\r\n          <Form.Item label=\"Username\" name=\"username\">\r\n            <Input id=\"Username\" name=\"username\" disabled/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"First Name\" name=\"firstName\">\r\n            <Input id=\"firstName\" name=\"firstName\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Last Name\" name=\"lastName\">\r\n            <Input id=\"lastName\" name=\"lastName\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input id=\"email\" name=\"email\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input.Password id=\"Password\" name=\"password\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout} name=\"hello\">\r\n            <Button type=\"primary\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Spin>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;","import ProfileForm from './ProfileForm';\r\nexport default ProfileForm;","import EditProfilePage from './EditProfilePage';\r\n\r\nexport default EditProfilePage;","import ProfileForm from \"./ProfileForm\";\r\n\r\nconst EditProfilePage = () => {\r\n  return (\r\n    <div className=\"max-w-screen-lg mx-auto\">\r\n      <h1 className=\"block text-xl text-center m-3\">Edit Profile</h1>\r\n      <ProfileForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfilePage;\r\n","import * as yup from 'yup';\r\n\r\nconst SignUpFormSchema = yup.object().shape({\r\n  username: yup.string().max(25).required(),\r\n  password: yup.string().min(5).required(),\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().email().required()\r\n})\r\n\r\nexport default SignUpFormSchema;","import { useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport AppContext from \"../../../contexts/AppContext\";\r\n\r\nimport { Button, Spin } from \"antd\";\r\nimport { Form, Input } from \"formik-antd\";\r\n\r\nimport SignUpFormSchema from \"../../../form-schemas/SignUpFormSchema\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const {signup} = useContext(AppContext);\r\n  return (\r\n    <Formik\r\n      initialValues={{ username: \"\", password: \"\", firstName:\"\", lastName: \"\", email: \"\" }}\r\n      onSubmit={async (values, {setSubmitting})=> {\r\n        // register\r\n        try {\r\n          const response = await signup(values);\r\n          setSubmitting(false);\r\n        } catch (e) {\r\n          console.error(e);\r\n          setSubmitting(false);\r\n        }\r\n        \r\n      }}\r\n      validationSchema={SignUpFormSchema}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <Spin spinning={isSubmitting}>\r\n        <Form {...layout} name=\"basic\">\r\n          <Form.Item label=\"Username\" name=\"username\">\r\n            <Input id=\"Username\" name=\"username\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input.Password id=\"Password\" name=\"password\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"First Name\" name=\"firstName\">\r\n            <Input id=\"firstName\" name=\"firstName\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Last Name\" name=\"lastName\">\r\n            <Input id=\"lastName\" name=\"lastName\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input id=\"email\" name=\"email\"/>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout} name=\"hello\">\r\n            <Button type=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Spin>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;","import SignUpForm from './SignUpForm';\r\n\r\nexport default SignUpForm;","import SignUpPage from './SignUpPage';\r\nexport default SignUpPage;","import SignUpForm from '../../SignUpForm';\r\nconst SignUpPage = () => {\r\n  return (<>\r\n    <SignUpForm />\r\n  </>)\r\n}\r\n\r\nexport default SignUpPage;","import {useState} from 'react';\r\n\r\nconst useLocalStorage = (key) => {\r\n  const [value, setValue] = useState(localStorage[key] ? localStorage[key] : null);\r\n  function set(value) {\r\n    console.log(key, value);\r\n    localStorage.setItem(key, value);\r\n    setValue(value);\r\n  }\r\n  function remove() {\r\n    localStorage.removeItem(key);\r\n    setValue();\r\n  }\r\n  return [value, {set, remove}];\r\n}\r\n\r\nexport default useLocalStorage;","import GuestNav from './GuestNav';\r\nexport default GuestNav;","import {Link} from \"react-router-dom\";\r\nconst GuestNav = () => {\r\n  return(\r\n    <div>\r\n      <Link to=\"/login\" className=\"mx-2\">Login</Link>\r\n      <Link to=\"/signup\" className=\"mx-2\">Signup</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuestNav;","import UserNav from './UserNav';\r\nexport default UserNav;","import {useContext} from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport AppContext from \"../../../../contexts/AppContext\";\r\n\r\nconst UserNav = () => {\r\n  const { user, logout } = useContext(AppContext);\r\n  return(\r\n    <div>\r\n      <NavLink to=\"/companies\" className=\"mx-2\">Companies</NavLink>\r\n      <NavLink to=\"/jobs\" className=\"mx-2\">Jobs</NavLink>\r\n      <NavLink to=\"/profile\" className=\"mx-2\">Profile</NavLink>\r\n      <a><button onClick={logout} className=\"mx-2 hover:\">Logout {user.username}</button></a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserNav;","import Nav from './Nav';\r\n\r\nexport default Nav;","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport AppContext from \"../../../contexts/AppContext\";\r\nimport GuestNav from \"./GuestNav\";\r\nimport UserNav from \"./UserNav\";\r\n\r\nconst Nav = () => {\r\n  const AppState = useContext(AppContext);\r\n  return <div className=\"bg-gray-100 p-3 flex justify-between\">\r\n    <Link to=\"/\" className=\"\">Jobly</Link>\r\n    {\r\n      AppState?.user?.isLoggedIn ? <UserNav /> : <GuestNav />\r\n    }\r\n  </div>;\r\n};\r\n\r\nexport default Nav;\r\n","import PrivateRoute from './PrivateRoute';\r\nexport default PrivateRoute;","import {useContext} from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\"\r\nimport AppContext from \"../../../contexts/AppContext\";\r\nimport LoginForm from \"../LoginForm\";\r\n\r\nconst PrivateRoute = ({children, ...props}) => {\r\n  const AppState = useContext(AppContext);\r\n  return AppState?.user?.isLoggedIn ? <Route {...props}>{children}</Route> : <LoginForm />;\r\n}\r\n\r\nexport default PrivateRoute;","import { useEffect, useReducer, useCallback, useMemo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { message } from \"antd\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { decode } from \"jsonwebtoken\";\n\n/** Pages */\nimport CompaniesPage from \"./pages/CompaniesPage\";\nimport CompanyPage from \"./pages/CompanyPage\";\nimport HomePage from \"./pages/HomePage\";\nimport JobsPage from \"./pages/JobsPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport EditProfilePage from \"./pages/EditProfilePage\";\nimport SignUpPage from \"./pages/SignUpPage\";\n\nimport JoblyAPI from \"../../api/JoblyAPI\";\n\nimport AppContext from \"../../contexts/AppContext\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport Nav from \"./Nav\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst initialUserState = { isLoggedIn: false, isLoading: false };\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return { ...state, isLoading: action.isLoading };\n    case \"SET_LOADING_USER_TRUE\":\n      return { ...state, isLoading: true };\n    case \"SET_LOADING_USER_FALSE\":\n      return { ...state, isLoading: false };\n    case \"APPLY_TO_JOB\":\n      const newState = { ...state };\n      newState.user.applications.push(action.jobId);\n      return newState;\n    case \"LOGIN_USER\":\n      return { ...state, user: { ...action.user }, isLoggedIn: true };\n    case \"UPDATE_USER\":\n      const updatedUser = { ...state.user, ...action.user };\n      return { ...state, user: { ...updatedUser } };\n    case \"LOGOUT_USER\":\n      return initialUserState;\n    default:\n      throw new Error();\n  }\n};\n\nfunction App() {\n  const history = useHistory();\n  const [token, { set, remove }] = useLocalStorage(\"token\");\n  const [user, dispatch] = useReducer(userReducer, initialUserState);\n\n  const login = useCallback(\n    async (data) => {\n      try {\n        dispatch({ type: \"SET_LOADING_USER_TRUE\" });\n        const { token } = await JoblyAPI.login(data);\n        set(token);\n      } catch (e) {\n        console.log(e);\n        message.error(\"Inavlid Username/Password\");\n        dispatch({ type: \"SET_LOADING_USER_FALSE\" });\n        remove();\n        throw e;\n      }\n    },\n    [remove, set]\n  );\n\n  const logout = () => {\n    remove();\n    dispatch({ type: \"LOGOUT_USER\" });\n  };\n\n  const signup = useCallback(\n    async (data) => {\n      try {\n        const { token } = await JoblyAPI.registerUser(data);\n        if (token) set(token);\n      } catch (e) {\n        console.error(e);\n        message(\"error\");\n        throw e;\n      }\n    },\n    [set]\n  );\n\n  const updateUser = useCallback(\n    async (values, { setSubmitting, resetForm }) => {\n      try {\n        let user = await JoblyAPI.updateUser(values);\n        message.success(\"Profile Updated Successfully\");\n        dispatch({ type: \"UPDATE_USER\", user });\n        resetForm();\n        setSubmitting(false);\n      } catch (e) {\n        console.error(e);\n        message.error(\"Unable to update profile.\");\n        setSubmitting(false);\n      }\n    },\n    []\n  );\n\n  const applyToJob = useCallback(async (username, jobId) => {\n    try {\n      const response = await JoblyAPI.applyToJob(\n        username,\n        jobId\n      );\n      if (!response.applied) throw new Error();\n      const appliedJobId = response.applied;\n      return appliedJobId;\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  });\n\n  //\n  useEffect(() => {\n    console.log(token);\n    const loadUser = async (username) => {\n      try {\n        dispatch({ type: \"SET_LOADING_USER_TRUE\" });\n        const user = await JoblyAPI.getUser(username);\n        dispatch({ type: \"LOGIN_USER\", user });\n        dispatch({ type: \"SET_LOADING_USER_FALSE\" });\n      } catch (e) {\n        console.error(e);\n        dispatch({ type: \"SET_LOADING_USER_FALSE\" });\n        throw e;\n      }\n    };\n    if (token) {\n      JoblyAPI.token = token;\n      const { username } = decode(token);\n      loadUser(username);\n    }\n  }, [token]);\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <AppContext.Provider\n          value={{ applyToJob, dispatch, login, logout, signup, token, updateUser, user,}}\n        >\n          <header className=\"App-header\">\n            <Nav />\n          </header>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <PrivateRoute path=\"/companies/\" exact component={CompaniesPage} />\n            <PrivateRoute\n              path=\"/companies/:handle\"\n              exact\n              component={CompanyPage}\n            />\n            <PrivateRoute path=\"/jobs\" exact component={JobsPage} />\n            <Route path=\"/login\" exact component={LoginPage} />\n            <Route path=\"/signup\" exact component={SignUpPage} />\n            <PrivateRoute path=\"/profile\" exact component={EditProfilePage} />\n          </Switch>\n        </AppContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App.js';\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}